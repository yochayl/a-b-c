{"version":3,"sources":["src/assets/sound sync /^/.*$","src/assets/sound/alef-hiriq.ogg","src/assets/sound/alef-qamats.ogg","src/letters/index.js","src/main.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Letter","sign","soundFile","style","afterSound","React","useState","sound","setSound","useEffect","unloadAsync","undefined","Pressable","onPress","a","async","Audio","Sound","createAsync","require","setOnPlaybackStatusUpdate","status","didJustFinish","playAsync","playSound","Text","styles","letter","StyleSheet","create","fontSize","letters","alef","qamats","hiriq","Main","getRandomLetter","setLetter","View","container","StatusBar","flex","backgroundColor","alignItems","justifyContent","color","letterMarks","getRandomValue","obj","Math","floor","random","length","theme","DefaultTheme","dark","roundness","registerRootComponent"],"mappings":"yEAAA,IAAIA,EAAM,CACT,mBAAoB,IACpB,oBAAqB,KAItB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,oBCvBpBU,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,sLCI9BC,EAAS,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAK/C,MAA0BC,IAAMC,WAAhC,WAAOC,EAAP,KAAcC,EAAd,KAuBA,OARAH,IAAMI,WAAU,WACd,OAAOF,EACH,WACEA,EAAMG,oBAERC,IACH,CAACJ,IAGF,kBAACK,EAAA,EAAD,CAAWC,QA5Bb,YAMA,qBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAC0BE,IAAMC,MAAMC,YAClCC,OAAQ,KAAmBjB,KAF/B,uBACUK,EADV,EACUA,MAGRC,EAASD,GACTA,EAAMa,2BAA0B,SAAOC,GAAP,SAAAP,EAAAC,OAAA,iDACD,IAAzBM,EAAOC,eACTlB,IAF4B,+DALlC,WAAAU,EAAA,MAUQP,EAAMgB,aAVd,4DALEC,KA4BE,kBAACC,EAAA,EAAD,CAAMtB,MAAO,CAACuB,EAAOC,OAAQxB,IAASF,KAKtCyB,EAASE,IAAWC,OAAO,CAC/BF,OAAQ,CACNG,SAAU,OCpCRC,EAAU,CACdC,KAAM,CACJC,OAAQ,CACNhC,KAAM,eACNC,UAAW,mBAEbgC,MAAO,CACLjC,KAAM,eACNC,UAAW,oBAKV,SAASiC,IACd,MAA4B7B,mBAAS8B,EAAgBL,IAArD,WAAOJ,EAAP,KAAeU,EAAf,KACQpC,EAAoB0B,EAApB1B,KAAMC,EAAcyB,EAAdzB,UACd,OACE,kBAACoC,EAAA,EAAD,CAAMnC,MAAOuB,EAAOa,WAClB,kBAAC,EAAD,CACEtC,KAAMA,EACNC,UAAWA,EACXC,MAAOuB,EAAOC,OACdvB,WAAY,kBAAMiC,EAAUD,EAAgBL,OAE9C,kBAACS,EAAA,EAAD,CAAWrC,MAAM,UAKvB,IAAMuB,EAASE,IAAWC,OAAO,CAC/BU,UAAW,CACTE,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAElBjB,OAAQ,CACNkB,MAAO,UAILT,EAAkB,SAACL,GACvB,IAAMe,EAAcC,EAAehB,GACnC,OAAOgB,EAAeD,IAGlBC,EAAiB,SAACC,GACtB,IAAMrD,EAAOC,OAAOD,KAAKqD,GAEzB,OAAOA,EAAIrD,EADCsD,KAAKC,MAAMD,KAAKE,SAAWxD,EAAKyD,W,ikBCjD9C,IAAMC,EAAK,OACNC,KADM,IAETC,MAAM,EACNC,UAAW,ICAbC,aDEe,WACb,OACE,kBAAC,IAAD,CAAeJ,MAAOA,GACpB,kBAAClB,EAAD,W","file":"static/js/app.b0978017.chunk.js","sourcesContent":["var map = {\n\t\"./alef-hiriq.ogg\": 111,\n\t\"./alef-qamats.ogg\": 112\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 110;","module.exports = __webpack_public_path__ + \"static/media/alef-hiriq.6c28305c.ogg\";","module.exports = __webpack_public_path__ + \"static/media/alef-qamats.f972dadb.ogg\";","import React from \"react\";\r\nimport { Text, Pressable, StyleSheet } from \"react-native\";\r\nimport { Audio } from \"expo-av\";\r\n\r\nexport const Letter = ({ sign, soundFile, style, afterSound }) => {\r\n  function onPressLetter() {\r\n    playSound();\r\n  }\r\n\r\n  const [sound, setSound] = React.useState();\r\n\r\n  async function playSound() {\r\n    const { sound } = await Audio.Sound.createAsync(\r\n      require(`../assets/sound/${soundFile}`)\r\n    );\r\n    setSound(sound);\r\n    sound.setOnPlaybackStatusUpdate(async (status) => {\r\n      if (status.didJustFinish === true) {\r\n        afterSound();\r\n      }\r\n    });\r\n    await sound.playAsync();\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    return sound\r\n      ? () => {\r\n          sound.unloadAsync();\r\n        }\r\n      : undefined;\r\n  }, [sound]);\r\n\r\n  return (\r\n    <Pressable onPress={onPressLetter}>\r\n      <Text style={[styles.letter, style]}>{sign}</Text>\r\n    </Pressable>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  letter: {\r\n    fontSize: 400,\r\n  },\r\n});\r\n","import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState } from \"react\";\r\nimport { StyleSheet, View, Pressable } from \"react-native\";\r\nimport { Letter } from \"./letters/index\";\r\n\r\nconst letters = {\r\n  alef: {\r\n    qamats: {\r\n      sign: \"אָ\",\r\n      soundFile: \"alef-qamats.ogg\",\r\n    },\r\n    hiriq: {\r\n      sign: \"אִ\",\r\n      soundFile: \"alef-hiriq.ogg\",\r\n    },\r\n  },\r\n};\r\n\r\nexport function Main() {\r\n  const [letter, setLetter] = useState(getRandomLetter(letters));\r\n  const { sign, soundFile } = letter;\r\n  return (\r\n    <View style={styles.container}>\r\n      <Letter\r\n        sign={sign}\r\n        soundFile={soundFile}\r\n        style={styles.letter}\r\n        afterSound={() => setLetter(getRandomLetter(letters))}\r\n      />\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  letter: {\r\n    color: \"blue\",\r\n  },\r\n});\r\n\r\nconst getRandomLetter = (letters) => {\r\n  const letterMarks = getRandomValue(letters);\r\n  return getRandomValue(letterMarks);\r\n};\r\n\r\nconst getRandomValue = (obj) => {\r\n  const keys = Object.keys(obj);\r\n  const idx = Math.floor(Math.random() * keys.length);\r\n  return obj[keys[idx]];\r\n};\r\n","import React from \"react\";\r\nimport { Provider as PaperProvider, DefaultTheme } from \"react-native-paper\";\r\nimport { Main } from \"./src/main\";\r\n\r\nconst theme = {\r\n  ...DefaultTheme,\r\n  dark: true,\r\n  roundness: 2,\r\n};\r\nexport default function App() {\r\n  return (\r\n    <PaperProvider theme={theme}>\r\n      <Main />\r\n    </PaperProvider>\r\n  );\r\n}\r\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}